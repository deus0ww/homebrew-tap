From 6367712c962ff1982d63205d6ac23e7efe8b19ab Mon Sep 17 00:00:00 2001
From: Deus0ww <6702585+deus0ww@users.noreply.github.com>
Date: Sat, 23 Aug 2025 15:04:00 +0700
Subject: [PATCH 1/1] Revert "vulkan/swapchain: disable
 VK_COLOR_SPACE_PASS_THROUGH_EXT"

This reverts commit f09e25d8abe34d633f882111d3c4c6f7347ddf06.
---
 src/vulkan/swapchain.c | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

diff --git a/src/vulkan/swapchain.c b/src/vulkan/swapchain.c
index bcc29c23..9f938916 100644
--- a/src/vulkan/swapchain.c
+++ b/src/vulkan/swapchain.c
@@ -143,9 +143,9 @@ static bool map_color_space(VkColorSpaceKHR space, struct pl_color_space *out)
     case VK_COLOR_SPACE_PASS_THROUGH_EXT:
         // On color-managed Wayland compositors, it behaves similar to 
         // VK_COLOR_SPACE_SRGB_NONLINEAR_KHR as they would treat un-tagged surface
-        // as sRGB, but on other OSes it's behavior is not clearly defined, so
-        // don't use it.
-        return false;
+        // as sRGB
+        *out = pl_color_space_unknown;
+        return true;
 
 #ifdef VK_AMD_display_native_hdr
     case VK_COLOR_SPACE_DISPLAY_NATIVE_AMD:
@@ -232,6 +232,8 @@ static bool pick_surf_format(pl_swapchain sw, const struct pl_color_space *hint)
             int score = 0;
             for (int c = 0; c < 3; c++)
                 score += plfmt->component_depth[c];
+            if (p->formats.elem[i].colorSpace == VK_COLOR_SPACE_PASS_THROUGH_EXT)
+                score += 100;
             if (pl_color_primaries_is_wide_gamut(space.primaries) == wide_gamut)
                 score += 1000;
             if (space.transfer == PL_COLOR_TRC_LINEAR)
-- 
2.39.5 (Apple Git-154)

